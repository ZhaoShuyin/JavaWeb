<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis.demo.mapper.OrdersMapper">

    <!-- 开启本mapper下的二级缓存 -->
    <!--<cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>-->
    <cache></cache>

    <!-- 1-1、查询订单细信息并关联查询用户用信息   (resultType)实现 -->
    <select id="queryOrdersAndUserByResultType" resultType="ordersCustom">
		SELECT o.*,u.username,u.address
		FROM orders o,USER u
		WHERE o.user_id = u.id
	</select>

    <!-- 1-2、查询订单细信息并关联查询用户用信息   (resultMap)实现 -->
    <resultMap type="orders" id="userIntoOrders">
        <!-- 订单信息 外层类变量映射-->
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="number" property="number" />
        <result column="createtime" property="createtime" />
        <result column="note" property="note" />

        <!-- 用户信息 内层类变量映射 association 一对一 -->
        <association property="user" javaType="user">
            <id column="user_id" property="id" />
            <result column="username" property="username" />
            <result column="address" property="address" />
        </association>

    </resultMap>
    <select id="queryOrdersAndUserByResultMap" resultMap="userIntoOrders">
		SELECT o.*,u.username,u.address
		FROM orders o,USER u
		WHERE o.user_id = u.id
	</select>

    <!-- 2、查询订单信息并关联查询明细信息 -->
    <resultMap type="orders" id="detailIntoOrders" extends="userIntoOrders">
        <!-- 订单信息、用户信息 -->
        <!-- collection 一对多 -->
        <collection property="orderdetails" ofType="orderdetail">
            <id column="orderdetail_id" property="id" />
            <result column="items_id" property="itemsId" />
            <result column="items_num" property="itemsNum" />
        </collection>
    </resultMap>
    <select id="queryOrdersAndDetailByResultMap" resultMap="detailIntoOrders">
		SELECT
		  o.*,
		  u.username,
		  u.address,
		  d.orders_id,
		  d.id orderdetail_id,
		  d.items_id,
		  d.items_num
		FROM orders o,USER u,orderdetail d
		WHERE o.user_id = u.id AND d.orders_id = o.id
	</select>


    <!-- 3、查询用户信息并关联查询商品信息 -->
    <resultMap type="user" id="allIntoUser">
        <!-- 用户信息 -->
        <id column="user_id" property="id" />
        <result column="username" property="username" />
        <result column="address" property="address" />
        <!-- 订单信息 -->
        <collection property="orderList" ofType="orders">
            <id column="id" property="id" />
            <result column="user_id" property="userId" />
            <result column="number" property="number" />
            <result column="createtime" property="createtime" />
            <result column="note" property="note" />

            <!-- 明细信息 -->
            <collection property="orderdetails" ofType="orderdetail">
                <id column="orderdetail_id" property="id" />
                <result column="items_id" property="itemsId" />
                <result column="items_num" property="itemsNum" />

                <!-- 商品信息 -->
                <association property="items" javaType="items">
                    <id column="items_id" property="id" />
                    <result column="name" property="name" />
                    <result column="price" property="price" />
                    <result column="detail" property="detail" />
                </association>
            </collection>
        </collection>
    </resultMap>
    <select id="queryAll" resultMap="allIntoUser">
		SELECT
		  o.*,
		  u.username,
		  u.address,
		  d.orders_id,
		  d.id orderdetail_id,
		  d.items_id,
		  d.items_num,
		  i.name,
		  i.price,
		  i.detail
		FROM orders o,USER u,orderdetail d,items i
		WHERE o.user_id = u.id AND d.orders_id = o.id AND i.id = d.items_id
	</select>


    <!-- 查询订单延迟加载用户 -->
    <select id="queryOrdersLazyLoadingByUser" resultMap="lazyLoadingUser">
		select * from orders
	</select>
    <!--延迟加载的结果集处理 通过association实现延迟加载在Java中使用getUser时再查询 -->
    <resultMap type="orders" id="lazyLoadingUser">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="number" property="number" />
        <result column="createtime" property="createtime" />
        <result column="note" property="note" />
        <association property="user" javaType="user" select="queryUserById"
            column="user_id"></association>
    </resultMap>
    <!--延迟加载的SQl语句-->
    <select id="queryUserById" parameterType="int" resultType="user" useCache="true">
		select * from user where id = #{user_id}
	</select>

    <!--修改-->
    <update id="updateUserById" parameterType="user">
		update user set username = #{username},birthday = #{birthday},sex = #{sex},address = #{address} where id = #{id}
	</update>

</mapper>