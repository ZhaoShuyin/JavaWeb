<?xml version="1.0" encoding="UTF-8"?><!-- 1、引入aop名称空间
	xmlns:aop="http://www.springframework.org/schema/aop"
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"	
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
				http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/aop 
				http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 2、把核心业务代码和共有（通知）代码交给Spring容器管理 -->
    <bean id="service" class="cn.day2.spring._01aop.ServiceImpl"></bean>
    <bean id="transaction" class="cn.day2.spring._01aop.TransactionManager"></bean>
    <!-- 3配置AOP -->
    <aop:config>
        <!-- 配置切面（某一方面）
            ref:指定通知
        -->
        <aop:pointcut expression="execution(* cn.day2.spring..*Impl.*(..))" id="pt1" />
        <aop:aspect ref="transaction">
            <!-- 一个通知类中有好多的方法，哪个方法在什么地方执行（通知类型）？ -->
            <!-- before：通知类型，前置通知。指定的通知方法会在核心业务代码执行前执行
                        method：通知中的方法
                        pointcut：指定切入点
             -->
            <!--  <aop:before method="startTransaction"
                   pointcut="execution(public void cn.day2.spring._01aop.AccountServiceImpl.transfer())"/> -->
            <!-- 可以使用*通配符：此处统配方法的返回值类型为任意 -->
            <!--  <aop:before method="startTransaction"
                   pointcut="execution(* cn.day2.spring._01aop.AccountServiceImpl.transfer())"/> -->
            <!-- ..匹配包及子包 -->
            <!--  <aop:before method="startTransaction"
                   pointcut="execution(* cn.day2.spring..AccountServiceImpl.transfer())"/> -->
            <!-- 匹配类或接口 -->
            <!--  <aop:before method="startTransaction"
                   pointcut="execution(* cn.day2.spring..*Impl.transfer())"/> -->
            <!-- 匹配方法名：* -->
            <!--  <aop:before method="startTransaction"
                   pointcut="execution(* cn.day2.spring..*Impl.*())"/> -->
            <!-- 匹配方法的参数：参数任意.. -->
            <!-- 	<aop:before method="startTransaction"
                     pointcut="execution(* cn.day2.spring..*Impl.*(String))"/> -->
            <!-- 	<aop:before method="startTransaction"
                     pointcut="execution(* cn.day2.spring..*Impl.*(String,String))"/> -->
            <aop:before method="beforeMethod" pointcut-ref="pt1" />
            <aop:after method="afterMethod" pointcut-ref="pt1" />
        </aop:aspect>
    </aop:config>
</beans>
