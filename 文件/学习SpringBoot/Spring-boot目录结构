Spring-boot目录结构介绍


1.工程启动类(Application.java)：置于com.cy.project包下或者com.cy.project.app包下

2.实体类(domain)：置于com.cy.project.domain

3.数据访问层(Dao)：置于com.cy.project.repository（dao）

4.数据服务层(Service)：置于com.cy.project.service
5.数据服务接口的实现(serviceImpl)：同样置于com.cy.project.service或者置于com.cy.project.service.impl

6.前端控制器(Controller)：置于com.cy.project.controller

7.工具类(utils)：置于com.cy.project.utils

8.常量接口类(constant)：置于com.cy.project.constant

9.配置信息类(config)：置于com.cy.project.config

资源文件：src.main.resources
1.页面以及js/css/image等置于static文件夹下的各自文件下

2.使用模版相关页面等置于templates文件夹下的各自文件下


配置文件
application.yml和application.properties
<application.yml>
#application.properties文件
#数据库连接配置
spring:
    datasource:
        url: jdbc:mysql://localhost:3306/zsydb?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=true
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: 123456
    #ddi-auto：create每次重新创建 ddl-auto：update 复用数据库表
    jpa:
        #hibernate:
       # ddl-auto: update
        show-sql: true
    #

<application.properties>
spring.datasource.url=jdbc:mysql://localhost:3306/zsydb?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.properties.hibernate.hbm2ddl.auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#sql输出
spring.jpa.show-sql=true
#format一下sql进行输出
spring.jpa.properties.hibernate.format_sql=true

com.neo.title=\u7EAF\u6D01\u7684\u5FAE\u7B11
com.neo.description=\u5206\u4EAB\u751F\u6D3B\u548C\u6280\u672F